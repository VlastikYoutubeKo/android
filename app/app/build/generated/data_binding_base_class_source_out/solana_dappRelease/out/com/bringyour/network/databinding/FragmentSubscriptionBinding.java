// Generated by view binder compiler. Do not edit!
package com.bringyour.network.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bringyour.network.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.radiobutton.MaterialRadioButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSubscriptionBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView plan1tibBestValue;

  @NonNull
  public final ConstraintLayout plan1tibContainer;

  @NonNull
  public final TextView plan1tibCurrent;

  @NonNull
  public final TextView plan1tibDescription;

  @NonNull
  public final TextView plan1tibLabel;

  @NonNull
  public final TextView plan1tibPrice;

  @NonNull
  public final TextView plan1tibPriceDescription;

  @NonNull
  public final MaterialRadioButton plan1tibRadio;

  @NonNull
  public final ConstraintLayout plan300gibContainer;

  @NonNull
  public final TextView plan300gibCurrent;

  @NonNull
  public final TextView plan300gibDescription;

  @NonNull
  public final TextView plan300gibLabel;

  @NonNull
  public final TextView plan300gibPrice;

  @NonNull
  public final TextView plan300gibPriceDescription;

  @NonNull
  public final MaterialRadioButton plan300gibRadio;

  @NonNull
  public final ConstraintLayout planBasicContainer;

  @NonNull
  public final TextView planBasicCurrent;

  @NonNull
  public final TextView planBasicDescription;

  @NonNull
  public final TextView planBasicLabel;

  @NonNull
  public final TextView planBasicPrice;

  @NonNull
  public final TextView planBasicPriceDescription;

  @NonNull
  public final MaterialRadioButton planBasicRadio;

  @NonNull
  public final ConstraintLayout planUltimateContainer;

  @NonNull
  public final TextView planUltimateCurrent;

  @NonNull
  public final TextView planUltimateDescription;

  @NonNull
  public final TextView planUltimateLabel;

  @NonNull
  public final TextView planUltimatePrice;

  @NonNull
  public final TextView planUltimatePriceDescription;

  @NonNull
  public final MaterialRadioButton planUltimateRadio;

  @NonNull
  public final MaterialButton subscriptionContinueButton;

  @NonNull
  public final CircularProgressIndicator subscriptionContinueSpinner;

  @NonNull
  public final TextView subscriptionData;

  @NonNull
  public final TextView subscriptionDataDescription;

  @NonNull
  public final TextView subscriptionDataUpdated;

  @NonNull
  public final TextView subscriptionDataUpdatedDescription;

  @NonNull
  public final TextView subscriptionDescription;

  @NonNull
  public final TextView subscriptionError;

  @NonNull
  public final TextView subscriptionHeader;

  @NonNull
  public final MaterialButton subscriptionHelpButton;

  @NonNull
  public final TextView subscriptionPrice;

  @NonNull
  public final TextView subscriptionRenewalDescription;

  private FragmentSubscriptionBinding(@NonNull ScrollView rootView,
      @NonNull TextView plan1tibBestValue, @NonNull ConstraintLayout plan1tibContainer,
      @NonNull TextView plan1tibCurrent, @NonNull TextView plan1tibDescription,
      @NonNull TextView plan1tibLabel, @NonNull TextView plan1tibPrice,
      @NonNull TextView plan1tibPriceDescription, @NonNull MaterialRadioButton plan1tibRadio,
      @NonNull ConstraintLayout plan300gibContainer, @NonNull TextView plan300gibCurrent,
      @NonNull TextView plan300gibDescription, @NonNull TextView plan300gibLabel,
      @NonNull TextView plan300gibPrice, @NonNull TextView plan300gibPriceDescription,
      @NonNull MaterialRadioButton plan300gibRadio, @NonNull ConstraintLayout planBasicContainer,
      @NonNull TextView planBasicCurrent, @NonNull TextView planBasicDescription,
      @NonNull TextView planBasicLabel, @NonNull TextView planBasicPrice,
      @NonNull TextView planBasicPriceDescription, @NonNull MaterialRadioButton planBasicRadio,
      @NonNull ConstraintLayout planUltimateContainer, @NonNull TextView planUltimateCurrent,
      @NonNull TextView planUltimateDescription, @NonNull TextView planUltimateLabel,
      @NonNull TextView planUltimatePrice, @NonNull TextView planUltimatePriceDescription,
      @NonNull MaterialRadioButton planUltimateRadio,
      @NonNull MaterialButton subscriptionContinueButton,
      @NonNull CircularProgressIndicator subscriptionContinueSpinner,
      @NonNull TextView subscriptionData, @NonNull TextView subscriptionDataDescription,
      @NonNull TextView subscriptionDataUpdated,
      @NonNull TextView subscriptionDataUpdatedDescription,
      @NonNull TextView subscriptionDescription, @NonNull TextView subscriptionError,
      @NonNull TextView subscriptionHeader, @NonNull MaterialButton subscriptionHelpButton,
      @NonNull TextView subscriptionPrice, @NonNull TextView subscriptionRenewalDescription) {
    this.rootView = rootView;
    this.plan1tibBestValue = plan1tibBestValue;
    this.plan1tibContainer = plan1tibContainer;
    this.plan1tibCurrent = plan1tibCurrent;
    this.plan1tibDescription = plan1tibDescription;
    this.plan1tibLabel = plan1tibLabel;
    this.plan1tibPrice = plan1tibPrice;
    this.plan1tibPriceDescription = plan1tibPriceDescription;
    this.plan1tibRadio = plan1tibRadio;
    this.plan300gibContainer = plan300gibContainer;
    this.plan300gibCurrent = plan300gibCurrent;
    this.plan300gibDescription = plan300gibDescription;
    this.plan300gibLabel = plan300gibLabel;
    this.plan300gibPrice = plan300gibPrice;
    this.plan300gibPriceDescription = plan300gibPriceDescription;
    this.plan300gibRadio = plan300gibRadio;
    this.planBasicContainer = planBasicContainer;
    this.planBasicCurrent = planBasicCurrent;
    this.planBasicDescription = planBasicDescription;
    this.planBasicLabel = planBasicLabel;
    this.planBasicPrice = planBasicPrice;
    this.planBasicPriceDescription = planBasicPriceDescription;
    this.planBasicRadio = planBasicRadio;
    this.planUltimateContainer = planUltimateContainer;
    this.planUltimateCurrent = planUltimateCurrent;
    this.planUltimateDescription = planUltimateDescription;
    this.planUltimateLabel = planUltimateLabel;
    this.planUltimatePrice = planUltimatePrice;
    this.planUltimatePriceDescription = planUltimatePriceDescription;
    this.planUltimateRadio = planUltimateRadio;
    this.subscriptionContinueButton = subscriptionContinueButton;
    this.subscriptionContinueSpinner = subscriptionContinueSpinner;
    this.subscriptionData = subscriptionData;
    this.subscriptionDataDescription = subscriptionDataDescription;
    this.subscriptionDataUpdated = subscriptionDataUpdated;
    this.subscriptionDataUpdatedDescription = subscriptionDataUpdatedDescription;
    this.subscriptionDescription = subscriptionDescription;
    this.subscriptionError = subscriptionError;
    this.subscriptionHeader = subscriptionHeader;
    this.subscriptionHelpButton = subscriptionHelpButton;
    this.subscriptionPrice = subscriptionPrice;
    this.subscriptionRenewalDescription = subscriptionRenewalDescription;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSubscriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_subscription, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSubscriptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.plan_1tib_best_value;
      TextView plan1tibBestValue = ViewBindings.findChildViewById(rootView, id);
      if (plan1tibBestValue == null) {
        break missingId;
      }

      id = R.id.plan_1tib_container;
      ConstraintLayout plan1tibContainer = ViewBindings.findChildViewById(rootView, id);
      if (plan1tibContainer == null) {
        break missingId;
      }

      id = R.id.plan_1tib_current;
      TextView plan1tibCurrent = ViewBindings.findChildViewById(rootView, id);
      if (plan1tibCurrent == null) {
        break missingId;
      }

      id = R.id.plan_1tib_description;
      TextView plan1tibDescription = ViewBindings.findChildViewById(rootView, id);
      if (plan1tibDescription == null) {
        break missingId;
      }

      id = R.id.plan_1tib_label;
      TextView plan1tibLabel = ViewBindings.findChildViewById(rootView, id);
      if (plan1tibLabel == null) {
        break missingId;
      }

      id = R.id.plan_1tib_price;
      TextView plan1tibPrice = ViewBindings.findChildViewById(rootView, id);
      if (plan1tibPrice == null) {
        break missingId;
      }

      id = R.id.plan_1tib_price_description;
      TextView plan1tibPriceDescription = ViewBindings.findChildViewById(rootView, id);
      if (plan1tibPriceDescription == null) {
        break missingId;
      }

      id = R.id.plan_1tib_radio;
      MaterialRadioButton plan1tibRadio = ViewBindings.findChildViewById(rootView, id);
      if (plan1tibRadio == null) {
        break missingId;
      }

      id = R.id.plan_300gib_container;
      ConstraintLayout plan300gibContainer = ViewBindings.findChildViewById(rootView, id);
      if (plan300gibContainer == null) {
        break missingId;
      }

      id = R.id.plan_300gib_current;
      TextView plan300gibCurrent = ViewBindings.findChildViewById(rootView, id);
      if (plan300gibCurrent == null) {
        break missingId;
      }

      id = R.id.plan_300gib_description;
      TextView plan300gibDescription = ViewBindings.findChildViewById(rootView, id);
      if (plan300gibDescription == null) {
        break missingId;
      }

      id = R.id.plan_300gib_label;
      TextView plan300gibLabel = ViewBindings.findChildViewById(rootView, id);
      if (plan300gibLabel == null) {
        break missingId;
      }

      id = R.id.plan_300gib_price;
      TextView plan300gibPrice = ViewBindings.findChildViewById(rootView, id);
      if (plan300gibPrice == null) {
        break missingId;
      }

      id = R.id.plan_300gib_price_description;
      TextView plan300gibPriceDescription = ViewBindings.findChildViewById(rootView, id);
      if (plan300gibPriceDescription == null) {
        break missingId;
      }

      id = R.id.plan_300gib_radio;
      MaterialRadioButton plan300gibRadio = ViewBindings.findChildViewById(rootView, id);
      if (plan300gibRadio == null) {
        break missingId;
      }

      id = R.id.plan_basic_container;
      ConstraintLayout planBasicContainer = ViewBindings.findChildViewById(rootView, id);
      if (planBasicContainer == null) {
        break missingId;
      }

      id = R.id.plan_basic_current;
      TextView planBasicCurrent = ViewBindings.findChildViewById(rootView, id);
      if (planBasicCurrent == null) {
        break missingId;
      }

      id = R.id.plan_basic_description;
      TextView planBasicDescription = ViewBindings.findChildViewById(rootView, id);
      if (planBasicDescription == null) {
        break missingId;
      }

      id = R.id.plan_basic_label;
      TextView planBasicLabel = ViewBindings.findChildViewById(rootView, id);
      if (planBasicLabel == null) {
        break missingId;
      }

      id = R.id.plan_basic_price;
      TextView planBasicPrice = ViewBindings.findChildViewById(rootView, id);
      if (planBasicPrice == null) {
        break missingId;
      }

      id = R.id.plan_basic_price_description;
      TextView planBasicPriceDescription = ViewBindings.findChildViewById(rootView, id);
      if (planBasicPriceDescription == null) {
        break missingId;
      }

      id = R.id.plan_basic_radio;
      MaterialRadioButton planBasicRadio = ViewBindings.findChildViewById(rootView, id);
      if (planBasicRadio == null) {
        break missingId;
      }

      id = R.id.plan_ultimate_container;
      ConstraintLayout planUltimateContainer = ViewBindings.findChildViewById(rootView, id);
      if (planUltimateContainer == null) {
        break missingId;
      }

      id = R.id.plan_ultimate_current;
      TextView planUltimateCurrent = ViewBindings.findChildViewById(rootView, id);
      if (planUltimateCurrent == null) {
        break missingId;
      }

      id = R.id.plan_ultimate_description;
      TextView planUltimateDescription = ViewBindings.findChildViewById(rootView, id);
      if (planUltimateDescription == null) {
        break missingId;
      }

      id = R.id.plan_ultimate_label;
      TextView planUltimateLabel = ViewBindings.findChildViewById(rootView, id);
      if (planUltimateLabel == null) {
        break missingId;
      }

      id = R.id.plan_ultimate_price;
      TextView planUltimatePrice = ViewBindings.findChildViewById(rootView, id);
      if (planUltimatePrice == null) {
        break missingId;
      }

      id = R.id.plan_ultimate_price_description;
      TextView planUltimatePriceDescription = ViewBindings.findChildViewById(rootView, id);
      if (planUltimatePriceDescription == null) {
        break missingId;
      }

      id = R.id.plan_ultimate_radio;
      MaterialRadioButton planUltimateRadio = ViewBindings.findChildViewById(rootView, id);
      if (planUltimateRadio == null) {
        break missingId;
      }

      id = R.id.subscription_continue_button;
      MaterialButton subscriptionContinueButton = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionContinueButton == null) {
        break missingId;
      }

      id = R.id.subscription_continue_spinner;
      CircularProgressIndicator subscriptionContinueSpinner = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionContinueSpinner == null) {
        break missingId;
      }

      id = R.id.subscription_data;
      TextView subscriptionData = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionData == null) {
        break missingId;
      }

      id = R.id.subscription_data_description;
      TextView subscriptionDataDescription = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionDataDescription == null) {
        break missingId;
      }

      id = R.id.subscription_data_updated;
      TextView subscriptionDataUpdated = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionDataUpdated == null) {
        break missingId;
      }

      id = R.id.subscription_data_updated_description;
      TextView subscriptionDataUpdatedDescription = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionDataUpdatedDescription == null) {
        break missingId;
      }

      id = R.id.subscription_description;
      TextView subscriptionDescription = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionDescription == null) {
        break missingId;
      }

      id = R.id.subscription_error;
      TextView subscriptionError = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionError == null) {
        break missingId;
      }

      id = R.id.subscription_header;
      TextView subscriptionHeader = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionHeader == null) {
        break missingId;
      }

      id = R.id.subscription_help_button;
      MaterialButton subscriptionHelpButton = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionHelpButton == null) {
        break missingId;
      }

      id = R.id.subscription_price;
      TextView subscriptionPrice = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionPrice == null) {
        break missingId;
      }

      id = R.id.subscription_renewal_description;
      TextView subscriptionRenewalDescription = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionRenewalDescription == null) {
        break missingId;
      }

      return new FragmentSubscriptionBinding((ScrollView) rootView, plan1tibBestValue,
          plan1tibContainer, plan1tibCurrent, plan1tibDescription, plan1tibLabel, plan1tibPrice,
          plan1tibPriceDescription, plan1tibRadio, plan300gibContainer, plan300gibCurrent,
          plan300gibDescription, plan300gibLabel, plan300gibPrice, plan300gibPriceDescription,
          plan300gibRadio, planBasicContainer, planBasicCurrent, planBasicDescription,
          planBasicLabel, planBasicPrice, planBasicPriceDescription, planBasicRadio,
          planUltimateContainer, planUltimateCurrent, planUltimateDescription, planUltimateLabel,
          planUltimatePrice, planUltimatePriceDescription, planUltimateRadio,
          subscriptionContinueButton, subscriptionContinueSpinner, subscriptionData,
          subscriptionDataDescription, subscriptionDataUpdated, subscriptionDataUpdatedDescription,
          subscriptionDescription, subscriptionError, subscriptionHeader, subscriptionHelpButton,
          subscriptionPrice, subscriptionRenewalDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

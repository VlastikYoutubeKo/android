// Generated by view binder compiler. Do not edit!
package com.bringyour.network.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bringyour.network.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginPasswordBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final ConstraintLayout contentContainer;

  @NonNull
  public final TextView loginDescription;

  @NonNull
  public final MaterialButton loginForgotPasswordButton;

  @NonNull
  public final TextView loginHeader;

  @NonNull
  public final EditText loginPassword;

  @NonNull
  public final MaterialButton loginPasswordButton;

  @NonNull
  public final TextView loginPasswordError;

  @NonNull
  public final TextView loginPasswordLabel;

  @NonNull
  public final CircularProgressIndicator loginPasswordSpinner;

  private FragmentLoginPasswordBinding(@NonNull ScrollView rootView,
      @NonNull ConstraintLayout container, @NonNull ConstraintLayout contentContainer,
      @NonNull TextView loginDescription, @NonNull MaterialButton loginForgotPasswordButton,
      @NonNull TextView loginHeader, @NonNull EditText loginPassword,
      @NonNull MaterialButton loginPasswordButton, @NonNull TextView loginPasswordError,
      @NonNull TextView loginPasswordLabel,
      @NonNull CircularProgressIndicator loginPasswordSpinner) {
    this.rootView = rootView;
    this.container = container;
    this.contentContainer = contentContainer;
    this.loginDescription = loginDescription;
    this.loginForgotPasswordButton = loginForgotPasswordButton;
    this.loginHeader = loginHeader;
    this.loginPassword = loginPassword;
    this.loginPasswordButton = loginPasswordButton;
    this.loginPasswordError = loginPasswordError;
    this.loginPasswordLabel = loginPasswordLabel;
    this.loginPasswordSpinner = loginPasswordSpinner;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      ConstraintLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.content_container;
      ConstraintLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.login_description;
      TextView loginDescription = ViewBindings.findChildViewById(rootView, id);
      if (loginDescription == null) {
        break missingId;
      }

      id = R.id.login_forgot_password_button;
      MaterialButton loginForgotPasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (loginForgotPasswordButton == null) {
        break missingId;
      }

      id = R.id.login_header;
      TextView loginHeader = ViewBindings.findChildViewById(rootView, id);
      if (loginHeader == null) {
        break missingId;
      }

      id = R.id.login_password;
      EditText loginPassword = ViewBindings.findChildViewById(rootView, id);
      if (loginPassword == null) {
        break missingId;
      }

      id = R.id.login_password_button;
      MaterialButton loginPasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (loginPasswordButton == null) {
        break missingId;
      }

      id = R.id.login_password_error;
      TextView loginPasswordError = ViewBindings.findChildViewById(rootView, id);
      if (loginPasswordError == null) {
        break missingId;
      }

      id = R.id.login_password_label;
      TextView loginPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (loginPasswordLabel == null) {
        break missingId;
      }

      id = R.id.login_password_spinner;
      CircularProgressIndicator loginPasswordSpinner = ViewBindings.findChildViewById(rootView, id);
      if (loginPasswordSpinner == null) {
        break missingId;
      }

      return new FragmentLoginPasswordBinding((ScrollView) rootView, container, contentContainer,
          loginDescription, loginForgotPasswordButton, loginHeader, loginPassword,
          loginPasswordButton, loginPasswordError, loginPasswordLabel, loginPasswordSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

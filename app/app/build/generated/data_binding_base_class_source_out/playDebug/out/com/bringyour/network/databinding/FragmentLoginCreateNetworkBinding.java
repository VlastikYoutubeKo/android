// Generated by view binder compiler. Do not edit!
package com.bringyour.network.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bringyour.network.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginCreateNetworkBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final ConstraintLayout contentContainer;

  @NonNull
  public final TextView createHeader;

  @NonNull
  public final MaterialButton createNetworkButton;

  @NonNull
  public final TextView createNetworkError;

  @NonNull
  public final EditText createNetworkName;

  @NonNull
  public final TextView createNetworkNameAvailable;

  @NonNull
  public final Barrier createNetworkNameBarrier;

  @NonNull
  public final TextView createNetworkNameDomainLabel;

  @NonNull
  public final TextView createNetworkNameError;

  @NonNull
  public final TextView createNetworkNameLabel;

  @NonNull
  public final CircularProgressIndicator createNetworkNameSpinner;

  @NonNull
  public final CircularProgressIndicator createNetworkSpinner;

  @NonNull
  public final EditText createPassword;

  @NonNull
  public final TextView createPasswordError;

  @NonNull
  public final TextView createPasswordLabel;

  @NonNull
  public final MaterialCheckBox createTerms;

  @NonNull
  public final EditText createUserAuth;

  @NonNull
  public final TextView createUserAuthLabel;

  @NonNull
  public final EditText createUserName;

  @NonNull
  public final TextView createUserNameLabel;

  private FragmentLoginCreateNetworkBinding(@NonNull ScrollView rootView,
      @NonNull ConstraintLayout container, @NonNull ConstraintLayout contentContainer,
      @NonNull TextView createHeader, @NonNull MaterialButton createNetworkButton,
      @NonNull TextView createNetworkError, @NonNull EditText createNetworkName,
      @NonNull TextView createNetworkNameAvailable, @NonNull Barrier createNetworkNameBarrier,
      @NonNull TextView createNetworkNameDomainLabel, @NonNull TextView createNetworkNameError,
      @NonNull TextView createNetworkNameLabel,
      @NonNull CircularProgressIndicator createNetworkNameSpinner,
      @NonNull CircularProgressIndicator createNetworkSpinner, @NonNull EditText createPassword,
      @NonNull TextView createPasswordError, @NonNull TextView createPasswordLabel,
      @NonNull MaterialCheckBox createTerms, @NonNull EditText createUserAuth,
      @NonNull TextView createUserAuthLabel, @NonNull EditText createUserName,
      @NonNull TextView createUserNameLabel) {
    this.rootView = rootView;
    this.container = container;
    this.contentContainer = contentContainer;
    this.createHeader = createHeader;
    this.createNetworkButton = createNetworkButton;
    this.createNetworkError = createNetworkError;
    this.createNetworkName = createNetworkName;
    this.createNetworkNameAvailable = createNetworkNameAvailable;
    this.createNetworkNameBarrier = createNetworkNameBarrier;
    this.createNetworkNameDomainLabel = createNetworkNameDomainLabel;
    this.createNetworkNameError = createNetworkNameError;
    this.createNetworkNameLabel = createNetworkNameLabel;
    this.createNetworkNameSpinner = createNetworkNameSpinner;
    this.createNetworkSpinner = createNetworkSpinner;
    this.createPassword = createPassword;
    this.createPasswordError = createPasswordError;
    this.createPasswordLabel = createPasswordLabel;
    this.createTerms = createTerms;
    this.createUserAuth = createUserAuth;
    this.createUserAuthLabel = createUserAuthLabel;
    this.createUserName = createUserName;
    this.createUserNameLabel = createUserNameLabel;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginCreateNetworkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginCreateNetworkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login_create_network, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginCreateNetworkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      ConstraintLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.content_container;
      ConstraintLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.create_header;
      TextView createHeader = ViewBindings.findChildViewById(rootView, id);
      if (createHeader == null) {
        break missingId;
      }

      id = R.id.create_network_button;
      MaterialButton createNetworkButton = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkButton == null) {
        break missingId;
      }

      id = R.id.create_network_error;
      TextView createNetworkError = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkError == null) {
        break missingId;
      }

      id = R.id.create_network_name;
      EditText createNetworkName = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkName == null) {
        break missingId;
      }

      id = R.id.create_network_name_available;
      TextView createNetworkNameAvailable = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkNameAvailable == null) {
        break missingId;
      }

      id = R.id.create_network_name_barrier;
      Barrier createNetworkNameBarrier = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkNameBarrier == null) {
        break missingId;
      }

      id = R.id.create_network_name_domain_label;
      TextView createNetworkNameDomainLabel = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkNameDomainLabel == null) {
        break missingId;
      }

      id = R.id.create_network_name_error;
      TextView createNetworkNameError = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkNameError == null) {
        break missingId;
      }

      id = R.id.create_network_name_label;
      TextView createNetworkNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkNameLabel == null) {
        break missingId;
      }

      id = R.id.create_network_name_spinner;
      CircularProgressIndicator createNetworkNameSpinner = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkNameSpinner == null) {
        break missingId;
      }

      id = R.id.create_network_spinner;
      CircularProgressIndicator createNetworkSpinner = ViewBindings.findChildViewById(rootView, id);
      if (createNetworkSpinner == null) {
        break missingId;
      }

      id = R.id.create_password;
      EditText createPassword = ViewBindings.findChildViewById(rootView, id);
      if (createPassword == null) {
        break missingId;
      }

      id = R.id.create_password_error;
      TextView createPasswordError = ViewBindings.findChildViewById(rootView, id);
      if (createPasswordError == null) {
        break missingId;
      }

      id = R.id.create_password_label;
      TextView createPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (createPasswordLabel == null) {
        break missingId;
      }

      id = R.id.create_terms;
      MaterialCheckBox createTerms = ViewBindings.findChildViewById(rootView, id);
      if (createTerms == null) {
        break missingId;
      }

      id = R.id.create_user_auth;
      EditText createUserAuth = ViewBindings.findChildViewById(rootView, id);
      if (createUserAuth == null) {
        break missingId;
      }

      id = R.id.create_user_auth_label;
      TextView createUserAuthLabel = ViewBindings.findChildViewById(rootView, id);
      if (createUserAuthLabel == null) {
        break missingId;
      }

      id = R.id.create_user_name;
      EditText createUserName = ViewBindings.findChildViewById(rootView, id);
      if (createUserName == null) {
        break missingId;
      }

      id = R.id.create_user_name_label;
      TextView createUserNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (createUserNameLabel == null) {
        break missingId;
      }

      return new FragmentLoginCreateNetworkBinding((ScrollView) rootView, container,
          contentContainer, createHeader, createNetworkButton, createNetworkError,
          createNetworkName, createNetworkNameAvailable, createNetworkNameBarrier,
          createNetworkNameDomainLabel, createNetworkNameError, createNetworkNameLabel,
          createNetworkNameSpinner, createNetworkSpinner, createPassword, createPasswordError,
          createPasswordLabel, createTerms, createUserAuth, createUserAuthLabel, createUserName,
          createUserNameLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

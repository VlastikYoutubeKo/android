buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '2.3'
    }
}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.20'
}


import java.text.SimpleDateFormat
import org.yaml.snakeyaml.Yaml


def bringyourHomeDir = System.getenv('BRINGYOUR_HOME') ?: "${System.env.HOME}/bringyour"

ext.envSecret = { envName ->
    def servicesFile = file("$bringyourHomeDir/vault/$envName/services.yml")
    if (servicesFile.exists()) {
        def services = new Yaml().load(servicesFile.newInputStream())
        if (services.hidden_prefixes && 0 < services.hidden_prefixes.size()) {
            services.hidden_prefixes[0]
        } else {
            ''
        }
    } else {
        // services file doesn't exist
        println("WARNING: [${envName}] services file doesn't exist, so the env secret won't be set (${servicesFile})")
        ''
    }
}

android {
    ext.appVersion = { ->
        def out = new ByteArrayOutputStream()
        def osName = ''
        def osArch = ''
        switch (System.getProperty('os.name')) {
            case 'Linux':
                osName = 'linux'
                break
            case 'Mac OS X':
                osName = 'darwin'
                break
        }
        switch (System.getProperty('os.arch')) {
            case 'amd64':
                osArch = 'amd64'
            case 'aarch64':
                osArch = 'arm64'
                break
        }
        exec {
            executable "${bringyourHomeDir}/warp/warpctl/build/${osName}/${osArch}/warpctl"
            args 'ls', 'version', '-b'
            standardOutput out
        }
        out.toString().trim()
    }
    ext.appVersionCode = { ->
        // hours since company founding
        def companyFounded = new SimpleDateFormat('MM/dd/yyyy').parse('05/23/2023')
        ((System.currentTimeMillis() - companyFounded.getTime()) / (1000 * 60 * 60)) as Integer
    }

    namespace 'com.bringyour.network'
    compileSdk 34
    ndkVersion '25.2.9519653'

    defaultConfig {
        // applicationId "com.bringyour.network"
        // minSdk 26
        applicationId "com.bringyour.network"
        minSdk 24
        targetSdk 34
        versionCode appVersionCode()
        versionName appVersion()

        setProperty('archivesBaseName', "${applicationId}-${versionName}-${versionCode}")

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        // see https://developer.android.com/build/shrink-code
        ndk {
            debugSymbolLevel 'SYMBOL_TABLE'
        }
    }

    signingConfigs {
        debug {
            storeFile file("${System.properties['user.home']}/.android/debug.keystore")
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions += 'version'

    // BuildConfig.FLAVOR
    productFlavors {
        local {
            dimension = 'version'
            applicationId 'com.bringyour.network.local'
            versionNameSuffix '-local'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"local"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", 'null'
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
        }
        dev {
            dimension = 'version'
            applicationId 'com.bringyour.network.dev'
            versionNameSuffix '-dev'

            // set up dns entries for your developer host ip, e.g.
            //   outerwerld-api.bringyour.com -> 192.168.1.11
            //   outerwerld-connect.bringyour.com -> 192.168.1.11

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"bringyour.com"'
            // the env is the host name
            // the server names will be e.g. outerwerld-lb.bringyour.com, outerwerld-api.bringyour.com, outerwerld-connect.bringyour.com, etc.
            // to make development easy, set your ip in the DNS
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", "\"${System.env.HOST}\""
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", '"all"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", '"all"'
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
        }
        canary {
            dimension = 'version'
            applicationId 'com.bringyour.network.canary'
            versionNameSuffix '-canary'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"canary"'
            // use secret so that we can use public routing that only our builds can access
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", "\"${envSecret('canary')}\""
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", 'null'
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
        }
        github {
            dimension = 'version'
            applicationId 'com.bringyour.network'
            versionNameSuffix '-github'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"ur.network"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"main"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", '"ur.io"'
            // the migratioon host name is used for services
            // TODO this will be removed once we fully migrate to ur.network
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", '"circle"'
            // hard coded initial extender networks
            // this can avoid the need for an initial doh query
            // json string array
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
        }
        play {
            dimension = 'version'
            applicationId 'com.bringyour.network'
            versionNameSuffix '-play'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"ur.network"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"main"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", '"ur.io"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", '"play"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", '"circle"'
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
        }
        solana_dapp {
            dimension = 'version'
            applicationId 'com.bringyour.network'
            versionNameSuffix '-solana_dapp'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"ur.network"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"main"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", '"ur.io"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", '"solana"'
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
        }
        fire {
            dimension = 'version'
            applicationId 'com.bringyour.network'
            versionNameSuffix '-fire'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"ur.network"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"main"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", '"ur.io"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", 'null'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", '"circle"'
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // see https://developer.android.com/reference/tools/gradle-api/7.4/com/android/build/api/dsl/BuildFeatures
    buildFeatures {
        viewBinding true
        buildConfig true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.13"
    }

    tasks.register('goclientBuild', Exec) {
        workingDir "${bringyourHomeDir}/bringyour/client"
        commandLine 'make', 'clean', 'build_android'
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            compileTask -> compileTask.dependsOn goclientBuild
        }
    }
}

dependencies {
    // see https://developer.android.com/build/dependencies#groovy
    //    implementation name: 'client', ext: 'aar'

    compileOnly fileTree(dir: "${bringyourHomeDir}/bringyour/client/build/android", include: ['*-sources.jar'])
    implementation fileTree(dir: "${bringyourHomeDir}/bringyour/client/build/android", include: ['*.aar', '*.jar'])

    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'

    // androidTestImplementation(platform(libs.androidx.compose.bom))

    implementation 'com.google.android.gms:play-services-auth:21.2.0'
    implementation 'circle.programmablewallet:sdk:1.0.1059'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.6'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.6'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.8.1'
//    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // jetpack compose
    def composeBom = platform('androidx.compose:compose-bom:2024.09.02')
    implementation composeBom
    androidTestImplementation composeBom

    implementation("androidx.navigation:navigation-compose:2.8.1")
    implementation "androidx.activity:activity-compose:1.9.2"

    // serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3")


    // Material Design 3
    implementation 'androidx.compose.material3:material3:1.3.0'
    implementation 'androidx.compose.material3:material3-adaptive-navigation-suite-android:1.3.0'
    implementation 'androidx.compose.material3:material3-window-size-class-android:1.3.0'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview:1.7.2'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.7.2'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.7.2'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.7.2'

    // for QR Code generation
    implementation 'com.google.zxing:core:3.5.3'

    implementation 'androidx.biometric:biometric-ktx:1.2.0-alpha05'

    // hilt
    implementation 'com.google.dagger:hilt-android:2.49'
    kapt 'com.google.dagger:hilt-compiler:2.48'
    implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'

    // play store review
    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.play:review-ktx:2.0.1'
}

// google play billing
// https://developer.android.com/google/play/billing/integrate#groovy
dependencies {
    // FIXME only bundle if using google play flavor
    def billing_version = '7.0.0'
    implementation "com.android.billingclient:billing:$billing_version"
    implementation "com.android.billingclient:billing-ktx:$billing_version"
}

// solana saga
dependencies {

    // FIXME only bundle if using saga flavor
    implementation("com.solanamobile:mobile-wallet-adapter-clientlib-ktx:2.0.3")
    implementation("com.solanamobile:web3-solana:0.2.5")
    implementation("com.solanamobile:rpc-core:0.2.7")
    implementation("io.github.funkatronics:multimult:0.2.3")
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}

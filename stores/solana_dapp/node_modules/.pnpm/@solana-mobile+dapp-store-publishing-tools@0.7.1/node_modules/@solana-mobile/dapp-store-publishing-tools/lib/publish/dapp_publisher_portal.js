function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _ts_generator(thisArg, body) {
    var f, y, t, g, _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    };
    return(g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g);
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
import axios from "axios";
export var PORTAL_ID = "22812690";
export var CONTACT_OBJECT_ID = "0-1";
export var CONTACT_PROPERTY_COMPANY = "company"; // string
export var CONTACT_PROPERTY_EMAIL = "email"; // string
export var CONTACT_PROPERTY_WEBSITE = "website"; // string
export var TICKET_OBJECT_ID = "0-5";
export var TICKET_PROPERTY_CONTENT = "content"; // string
export var TICKET_PROPERTY_ATTESTATION_PAYLOAD = "attestation_payload"; // base64-encoded string
export var TICKET_PROPERTY_AUTHORIZED_REQUEST = "requestor_is_authorized_to_submit_this_request"; // boolean
export var TICKET_PROPERTY_CRITICAL_UPDATE = "critical_update"; // boolean
export var TICKET_PROPERTY_DAPP_COLLECTION_ACCOUNT_ADDRESS = "dapp_collection_account_address"; // base58-encoded string
export var TICKET_PROPERTY_DAPP_RELEASE_ACCOUNT_ADDRESS = "dapp_release_account_address"; // base58-encoded string
export var TICKET_PROPERTY_GOOGLE_PLAY_STORE_PACKAGE_NAME = "google_play_store_package_name"; // string
export var TICKET_PROPERTY_POLICY_COMPLIANT = "complies_with_solana_dapp_store_policies"; // boolean
export var TICKET_PROPERTY_REQUEST_UNIQUE_ID = "request_unique_id"; // string (32 base-10 digits)
export var TICKET_PROPERTY_TESTING_INSTRUCTIONS = "testing_instructions"; // string
export var FORM_SUBMIT = "1464247f-6804-46e1-8114-952f372daa81";
export var FORM_UPDATE = "87b4cbe7-957f-495c-a132-8b789678883d";
export var FORM_REMOVE = "913a4e44-ec90-4db6-8aa9-c49f29b569b9";
export var FORM_SUPPORT = "2961f018-6a4d-4e9d-8332-e219428c8cf2";
export var URL_FORM_SUBMIT = "https://api.hsforms.com/submissions/v3/integration/submit/".concat(PORTAL_ID, "/").concat(FORM_SUBMIT);
export var URL_FORM_UPDATE = "https://api.hsforms.com/submissions/v3/integration/submit/".concat(PORTAL_ID, "/").concat(FORM_UPDATE);
export var URL_FORM_REMOVE = "https://api.hsforms.com/submissions/v3/integration/submit/".concat(PORTAL_ID, "/").concat(FORM_REMOVE);
export var URL_FORM_SUPPORT = "https://api.hsforms.com/submissions/v3/integration/submit/".concat(PORTAL_ID, "/").concat(FORM_SUPPORT);
export var submitRequestToSolanaDappPublisherPortal = function() {
    var _ref = _async_to_generator(function(request, url, dryRun) {
        var config;
        return _ts_generator(this, function(_state) {
            switch(_state.label){
                case 0:
                    config = {
                        method: "POST",
                        url: url,
                        headers: {
                            "Content-Type": "application/json"
                        },
                        data: JSON.stringify(request)
                    };
                    console.info("Sending dApp publisher portal request:", config);
                    if (!!dryRun) return [
                        3,
                        2
                    ];
                    return [
                        4,
                        axios(config).then(function(response) {
                            console.info("dApp publisher portal response:", response.data);
                        }).catch(function(error) {
                            if (error.response) {
                                console.error("ERROR: failed to submit request to dApp publisher portal: ".concat(error.response.status, " /"), error.response.data);
                            } else if (error.request) {
                                console.error("ERROR: failed sending request to dApp publisher portal:", error.request);
                            } else {
                                console.error("ERROR: failed sending request:", error);
                            }
                        })
                    ];
                case 1:
                    _state.sent();
                    return [
                        3,
                        3
                    ];
                case 2:
                    console.warn("Dry run, not actually sending request to dApp publisher portal");
                    _state.label = 3;
                case 3:
                    return [
                        2
                    ];
            }
        });
    });
    return function submitRequestToSolanaDappPublisherPortal(request, url, dryRun) {
        return _ref.apply(this, arguments);
    };
}();
